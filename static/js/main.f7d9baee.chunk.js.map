{"version":3,"sources":["components/ContactList/ContactList.module.css","components/phonebook/phonebook.module.css","components/filter/filter.module.css","components/ContactList/fadeContact.module.css","components/phonebook/appear.module.css","components/phonebook/errorFade.module.css","redux/actions/contactAction.js","redux/redusers/contactReducer.js","redux/store.js","redux/taskOperations/taskOperations.js","redux/contactSelector/contactSelector.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/filter/filter.js","components/phonebook/Phonebook.js","App.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","addContactRequest","createAction","addContactError","addContactSuccess","deleteContactRequest","deleteContactError","deleteContactSuccess","getContactRequest","geteContactError","getContactSuccess","searchContact","contacts","createReducer","actionType","state","action","payload","filter","item","id","combineReducers","store","configureStore","reducer","tasks","contactReduser","deleteContact","dispatch","contactAction","axios","delete","then","catch","err","getContact","get","res","data","addContact","name","number","post","contactSelector","filterSelector","visibleContactSelector","createSelector","toLowerCase","includes","ContactForm","handleName","e","setState","target","value","handlNumber","handleSubmit","preventDefault","props","find","onError","onAddContacts","this","className","styles","block","onSubmit","form","label","name_form","input","type","placeholder","onChange","button","Component","mapDispatchToProps","taskOperation","connect","onRemove","taskOperations","title","TransitionGroup","component","map","contact","CSSTransition","timeout","classNames","fadeContact","key","contact_li","contact_name","contact_btn","onClick","onSearchContact","Phonebook","error","errorContact","setTimeout","onGetContacts","in","errorFade","unmountOnExit","blockerror","appear","ContactList","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f7d9baee.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactList_form__2qOOQ\",\"title\":\"ContactList_title__ATLM_\",\"contact_li\":\"ContactList_contact_li__3Mw54\",\"contact_name\":\"ContactList_contact_name__16ElV\",\"contact_btn\":\"ContactList_contact_btn__2cjDu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"phonebook_block__3leaV\",\"form\":\"phonebook_form__35hek\",\"title\":\"phonebook_title__H8Ept\",\"contacts\":\"phonebook_contacts__3Ras2\",\"blockerror\":\"phonebook_blockerror__1CEC9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"filter_block__3mcaS\",\"title\":\"filter_title__z3VH_\",\"search_txt\":\"filter_search_txt__3O6gA\",\"form\":\"filter_form__cmOFk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"fadeContact_enter__TaX2X\",\"enterActive\":\"fadeContact_enterActive__a7XZI\",\"exit\":\"fadeContact_exit__19S4a\",\"exitActive\":\"fadeContact_exitActive__2zSWF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appear\":\"appear_appear__AXAqp\",\"appearActive\":\"appear_appearActive__1VnKW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"errorFade_enter__e9dpU\",\"enterActive\":\"errorFade_enterActive__1psXe\",\"exit\":\"errorFade_exit__X1YLN\",\"exitActive\":\"errorFade_exitActive__25R5t\"};","import { createAction } from \"@reduxjs/toolkit\";\n// import { v4 as uuidv4 } from \"uuid\";\n\n// const addContact = createAction(ADD_CONTACT, (taskName, taskPhone) => ({\n//   payload: { contacts: { name: taskName, number: taskPhone, id: uuidv4() } },\n// }));\n\nconst addContactRequest = createAction(\"@contacts/addRequest\");\n\nconst addContactError = createAction(\"@contacts/addError\");\n\nconst addContactSuccess = createAction(\"@contacts/addSuccess\");\n\nconst deleteContactRequest = createAction(\"@contacts/deleteRequest\");\n\nconst deleteContactError = createAction(\"@contacts/deleteError\");\n\nconst deleteContactSuccess = createAction(\"@contacts/deleteSuccess\");\n\nconst getContactRequest = createAction(\"@contacts/getRequest\");\n\nconst geteContactError = createAction(\"@contacts/getError\");\n\nconst getContactSuccess = createAction(\"@contacts/getSuccess\");\n\nconst searchContact = createAction(\"@contact/filterContact\");\n\n// const removeTask = (taskid) => ({\n//   type: DELETE_CONTACT,\n//   payload: { id: taskid },\n// });\n\nexport default {\n  addContactRequest,\n  addContactError,\n  addContactSuccess,\n  deleteContactRequest,\n  deleteContactError,\n  deleteContactSuccess,\n  getContactRequest,\n  geteContactError,\n  getContactSuccess,\n  searchContact,\n};\n","import actionType from \"../actions/contactAction\";\nimport { combineReducers } from \"redux\";\nimport { createReducer } from \"@reduxjs/toolkit\";\n\n// const contacts = (state = [], { type, payload }) => {\n//   switch (type) {\n//     case actionType.addContact.type:\n//       return [...state, payload.contacts];\n\n//     case actionType.deleteContact.type:\n//       return state.filter((contact) => contact.id !== payload);\n\n//     default:\n//       return state;\n//   }\n// };\n\nconst contacts = createReducer([], {\n  [actionType.getContactSuccess]: (state, action) => action.payload,\n  [actionType.deleteContactSuccess]: (state, action) =>\n    state.filter((item) => item.id !== action.payload),\n  [actionType.addContactSuccess]: (state, action) => [...state, action.payload],\n});\n\nconst filter = createReducer(\"\", {\n  [actionType.searchContact]: (state, action) => action.payload,\n});\n\nexport default combineReducers({ contacts: contacts, filter: filter });\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport contactReduser from \"./redusers/contactReducer\";\n\nconst store = configureStore({\n  reducer: { tasks: contactReduser },\n});\n\nexport default store;\n","import contactAction from \"../actions/contactAction\";\nimport axios from \"axios\";\n\nconst addContact = (name, number) => (dispatch) => {\n  dispatch(contactAction.addContactRequest());\n  axios\n    .post(\"http://localhost:2000/contacts\", { name: name, number: number })\n    .then((res) => {\n      dispatch(contactAction.addContactSuccess(res.data));\n    })\n    .catch((err) => {\n      dispatch(contactAction.addContactError(err));\n    });\n};\n\nconst getContact = () => (dispatch) => {\n  dispatch(contactAction.getContactRequest());\n  axios\n    .get(\"http://localhost:2000/contacts\")\n    .then((res) => {\n      dispatch(contactAction.getContactSuccess(res.data));\n    })\n    .catch((err) => {\n      dispatch(contactAction.geteContactError(err));\n    });\n};\n\nconst deleteContact = (id) => (dispatch) => {\n  dispatch(contactAction.deleteContactRequest());\n  axios\n    .delete(`http://localhost:2000/contacts/${id}`)\n    .then(() => dispatch(contactAction.deleteContactSuccess(id)))\n    .catch((err) => {\n      dispatch(contactAction.deleteContactError(err));\n    });\n};\n\nexport default { deleteContact, getContact, addContact };\n","import { createSelector } from \"@reduxjs/toolkit\";\n\nconst contactSelector = (state) => state.tasks.contacts;\n\nconst filterSelector = (state) => state.tasks.filter;\n\nconst visibleContactSelector = createSelector(\n  [contactSelector, filterSelector],\n  (contacts, filter) =>\n    contacts.filter((item) =>\n      item.name.toLowerCase().includes(filter.toLowerCase())\n    )\n);\n\nexport default { visibleContactSelector, filterSelector, contactSelector };\n","import React, { Component } from \"react\";\nimport styles from \"./ContactForm.module.css\";\nimport { connect } from \"react-redux\";\nimport taskOperation from \"../../redux/taskOperations/taskOperations\";\nimport contactSelector from \"../../redux/contactSelector/contactSelector\";\n\nclass ContactForm extends Component {\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n\n  handleName = (e) => {\n    this.setState({ name: e.target.value });\n  };\n\n  handlNumber = (e) => {\n    this.setState({ number: e.target.value });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const { name, number } = this.state;\n    if (this.props.contacts.find((item) => item.name === name)) {\n      this.props.onError();\n      this.setState({ name: \"\", number: \"\" });\n    } else {\n      this.props.onAddContacts(name, number);\n      this.setState({ name: \"\", number: \"\" });\n    }\n  };\n\n  render() {\n    const { name, number } = this.state;\n    return (\n      <>\n        <div className={styles.block}>\n          <form onSubmit={this.handleSubmit} className={styles.form}>\n            <label className={styles.label}>\n              <span className={styles.name_form}> Name:</span>\n              <input\n                className={styles.input}\n                type=\"text\"\n                name=\"name\"\n                placeholder=\"Your Name\"\n                value={name}\n                onChange={this.handleName}\n              ></input>\n            </label>\n            <label className={styles.label}>\n              <span className={styles.name_form}> Number:</span>\n              <input\n                className={styles.input}\n                type=\"text\"\n                name=\"number\"\n                placeholder=\"Your Number\"\n                value={number}\n                onChange={this.handlNumber}\n              ></input>\n            </label>\n            <button className={styles.button} type=\"submit\">\n              Add contact\n            </button>\n          </form>\n        </div>\n      </>\n    );\n  }\n}\nconst mapStateToProps = (state) => ({\n  contacts: contactSelector.contactSelector(state),\n});\nconst mapDispatchToProps = { onAddContacts: taskOperation.addContact };\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n","import React from \"react\";\nimport styles from \"../ContactList/ContactList.module.css\";\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\nimport fadeContact from \"./fadeContact.module.css\";\nimport { connect } from \"react-redux\";\nimport taskOperations from \"../../redux/taskOperations/taskOperations\";\nimport contactSelector from \"../../redux/contactSelector/contactSelector\";\n\nconst Contacts = ({ contacts, onRemove }) => {\n  return (\n    <>\n      <div className={styles.form}>\n        <h2 className={styles.title}>Contacts</h2>\n        <TransitionGroup component=\"ul\">\n          {contacts.map((contact) => (\n            <CSSTransition\n              timeout={500}\n              classNames={fadeContact}\n              key={contact.id}\n            >\n              <li className={styles.contact_li}>\n                <span className={styles.contact_name}>\n                  {contact.name} -{contact.number}\n                </span>\n\n                <button\n                  className={styles.contact_btn}\n                  onClick={() => onRemove(contact.id)}\n                >\n                  Delete\n                </button>\n              </li>\n            </CSSTransition>\n          ))}\n        </TransitionGroup>\n      </div>\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  contacts: contactSelector.visibleContactSelector(state),\n});\nconst mapDispatchToProps = { onRemove: taskOperations.deleteContact };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Contacts);\n","import React from \"react\";\nimport styles from \"./filter.module.css\";\nimport { connect } from \"react-redux\";\nimport contactAction from \"../../redux/actions/contactAction\";\nimport contactSelector from \"../../redux/contactSelector/contactSelector\";\n\nconst Filter = ({ filter, onSearchContact }) => {\n  return (\n    <div className={styles.block}>\n      <h2 className={styles.title}>Search</h2>\n\n      <input\n        className={styles.form}\n        type=\"text\"\n        placeholder=\"search\"\n        value={filter}\n        onChange={(e) => onSearchContact(e.target.value)}\n      />\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  filter: contactSelector.filterSelector(state),\n});\nconst mapDispatchToProps = { onSearchContact: contactAction.searchContact };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import React, { Component } from \"react\";\nimport ContactForm from \"../ContactForm/ContactForm\";\nimport ContactList from \"../ContactList/ContactList\";\nimport Filter from \"../filter/filter\";\nimport styles from \"./phonebook.module.css\";\nimport { CSSTransition } from \"react-transition-group\";\nimport appear from \"./appear.module.css\";\nimport errorFade from \"./errorFade.module.css\";\nimport { connect } from \"react-redux\";\nimport taskOperations from \"../../redux/taskOperations/taskOperations\";\nimport contactSelector from \"../../redux/contactSelector/contactSelector\";\n\nclass Phonebook extends Component {\n  state = {\n    error: false,\n  };\n\n  errorContact = () => {\n    this.setState({ error: true });\n    setTimeout(() => this.setState({ error: false }), 5000);\n  };\n\n  componentDidMount() {\n    this.props.onGetContacts();\n  }\n\n  render() {\n    const { error } = this.state;\n    return (\n      <>\n        <CSSTransition\n          in={error}\n          timeout={250}\n          classNames={errorFade}\n          unmountOnExit\n        >\n          <div className={styles.blockerror}>\n            Error! Contact is already exist!\n          </div>\n        </CSSTransition>\n        <div className={styles.block}>\n          <div className={styles.form}>\n            <CSSTransition\n              in={true}\n              appear={true}\n              timeout={500}\n              classNames={appear}\n              unmountOnExit\n            >\n              <h1 className={styles.title}>Phonebook</h1>\n            </CSSTransition>\n            <ContactForm onError={this.errorContact} />\n          </div>\n          <div className={styles.contacts}>\n            <Filter />\n\n            <ContactList />\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  contacts: contactSelector.contactSelector(state),\n});\nconst mapDispatchToProps = { onGetContacts: taskOperations.getContact };\nexport default connect(mapStateToProps, mapDispatchToProps)(Phonebook);\n","import React from \"react\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nimport Phonebook from \"./components/phonebook/Phonebook\";\n\nconst App = () => {\n  return (\n    <div>\n      <Provider store={store}>\n        <Phonebook />\n      </Provider>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <App />,\n\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"ContactForm_block__3L7f5\",\"form\":\"ContactForm_form__1fuOn\",\"label\":\"ContactForm_label__378f8\",\"name_form\":\"ContactForm_name_form__16HcO\",\"input\":\"ContactForm_input__gm87B\",\"button\":\"ContactForm_button__1MLZK\"};"],"sourceRoot":""}